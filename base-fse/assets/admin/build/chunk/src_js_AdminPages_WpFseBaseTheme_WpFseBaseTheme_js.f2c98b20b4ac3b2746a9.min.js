"use strict";
(globalThis["webpackChunkbase_fse"] = globalThis["webpackChunkbase_fse"] || []).push([["src_js_AdminPages_WpFseBaseTheme_WpFseBaseTheme_js"],{

/***/ "./common-react-hungry-flamingo/COMPONENTS/WpRestApi/WpRestApi.js":
/*!************************************************************************!*\
  !*** ./common-react-hungry-flamingo/COMPONENTS/WpRestApi/WpRestApi.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WpRestApi": () => (/* binding */ WpRestApi)
/* harmony export */ });
function WpRestApi(endpoint) {
  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';
  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
  const bodyObjBase = {
    endpoint: endpoint,
    current_time: new Date().toLocaleTimeString(),
    _wpnonce: wpEnv._wp_rest_nonce,
    _wp_http_referer: wpEnv._wp_http_referer
  };
  const bodyObj = { ...bodyObjBase
  };

  if (params !== undefined) {
    bodyObj['data'] = JSON.stringify(params);
  } else {
    bodyObj['data'] = null;
  }

  async function get() {
    const response = await fetch(wpEnv._wp_rest_url + 'hungry-flamingo/v1/' + wpEnv.plugin_slug + '/' + endpoint, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json; charset=utf-8',
        'X-WP-Nonce': wpEnv._wp_rest_nonce
      }
    }).then(res => {
      if (res.ok) {
        return res.json();
      } else {
        throw new Error('Server response was not OK');
      }
    }).then(data => {
      return data;
    });
    return response.success != undefined ? response : '{"success":false, "msg":"Unknown error"}';
  }

  async function post() {
    var bodyJson = JSON.stringify(bodyObj);
    const response = await fetch(wpEnv._wp_rest_url + 'hungry-flamingo/v1/' + wpEnv.plugin_slug + '/' + endpoint, {
      method: 'POST',
      body: bodyJson,
      headers: {
        'Content-Type': 'application/json; charset=utf-8',
        'X-WP-Nonce': wpEnv._wp_rest_nonce
      }
    }).then(res => {
      if (res.ok) {
        return res.json();
      } else {
        throw new Error('Server response was not OK');
      }
    }).then(data => {
      return data;
    });
    return response.success != undefined ? response : '{"success":false, "msg":"Unknown error"}';
  }

  if ('GET' === method) {
    return get();
  } else if ('POST' === method) {
    return post();
  } else {
    return null;
  }
}

/***/ }),

/***/ "./src/js/AdminPages/WpFseBaseTheme/WpFseBaseTheme.js":
/*!************************************************************!*\
  !*** ./src/js/AdminPages/WpFseBaseTheme/WpFseBaseTheme.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ WpAffiliateLinks)
/* harmony export */ });
/* harmony import */ var _common_react_hungry_flamingo_COMPONENTS_WpRestApi_WpRestApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../common-react-hungry-flamingo/COMPONENTS/WpRestApi/WpRestApi */ "./common-react-hungry-flamingo/COMPONENTS/WpRestApi/WpRestApi.js");

function WpAffiliateLinks() {
  React.useEffect(() => {}, []);
  return null;
}

/***/ })

}]);
//# sourceMappingURL=src_js_AdminPages_WpFseBaseTheme_WpFseBaseTheme_js.f2c98b20b4ac3b2746a9.min.js.map