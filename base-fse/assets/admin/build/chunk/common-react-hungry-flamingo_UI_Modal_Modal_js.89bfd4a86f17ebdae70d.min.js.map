{"version":3,"file":"chunk/common-react-hungry-flamingo_UI_Modal_Modal_js.89bfd4a86f17ebdae70d.min.js","mappings":";;;;;;;;;;;;;;AAAO,MAAMA,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW,MAAM,mWAAjB,CAAf;AAEQ,SAASC,aAAT,GAAyB;EACtC,OAAOC,SAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;ACJD;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASM,KAAT,GAAiB;EAC9B;EACA,MAAM;IAAEC,SAAF;IAAaC,YAAb;IAA2BC;EAA3B,IACJZ,KAAK,CAACa,UAAN,CAAiBT,gEAAjB,CADF;EAGA;;EACA,MAAMU,WAAW,GAAG,MAAM;IACxBH,YAAY,CAAC,KAAD,CAAZ;EACD,CAFD;EAIA;;;EACA,MAAMI,eAAe,GAAG,MAAM;IAC5B,IAAIH,WAAW,CAACI,KAAhB,EAAuB;MACrB,oBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,iEAAD;QACE,EAAE,EAAE,wBAAwBJ,WAAW,CAACK,EAAZ,GAAiBL,WAAW,CAACK,EAA7B,GAAkC,EAA1D;MADN,GAGGL,WAAW,CAACI,KAHf,CADF,CADF;IASD,CAVD,MAUO;MACL,OAAO,IAAP;IACD;EACF,CAdD;;EAgBA,oBACE,oBAAC,4DAAD;IACE,IAAI,EAAEN,SADR;IAEE,OAAO,EAAEI,WAFX;IAGE,mBACE,wBAAwBF,WAAW,CAACK,EAAZ,GAAiBL,WAAW,CAACK,EAA7B,GAAkC,EAA1D,CAJJ;IAME,oBAAoB,EAAE,KANxB;IAOE,SAAS,EAAE,IAPb;IAQE,QAAQ,EAAE;EARZ,gBAUE,oBAAC,eAAD,OAVF,eAWE,oBAAC,mEAAD,QACGL,WAAW,CAACM,OAAZ,GAAsBN,WAAW,CAACM,OAAlC,GAA4C,EAD/C,CAXF,eAcE,oBAAC,mEAAD,qBACE,oBAAC,2CAAD;IAAQ,OAAO,EAAEJ,WAAjB;IAA8B,KAAK,EAAC,SAApC;IAA8C,UAAU,EAAC;EAAzD,EADF,CAdF,CADF;AAoBD","sources":["webpack://base-fse/./common-react-hungry-flamingo/UI/Button/index.js","webpack://base-fse/./common-react-hungry-flamingo/UI/Modal/Modal.js"],"sourcesContent":["export const Button = React.lazy(() => import('./Button.js'));\n\nexport default function defaultExport() {\n  return undefined;\n}\n","/** imports */\nimport { ModalContext } from './../../CONTEXT/ModalProvider';\nimport { Button } from './../Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport default function Modal() {\n  /** set context */\n  const { modalOpen, setModalOpen, modalObject } =\n    React.useContext(ModalContext);\n\n  /** handlers */\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  /** Elements */\n  const LoadDialogTitle = () => {\n    if (modalObject.title) {\n      return (\n        <React.Fragment>\n          <DialogTitle\n            id={'form-dialog-title-' + (modalObject.id ? modalObject.id : '')}\n          >\n            {modalObject.title}\n          </DialogTitle>\n        </React.Fragment>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <Dialog\n      open={modalOpen}\n      onClose={handleClose}\n      aria-labelledby={\n        'form-dialog-title-' + (modalObject.id ? modalObject.id : '')\n      }\n      disableEscapeKeyDown={false}\n      fullWidth={true}\n      maxWidth={'md'}\n    >\n      <LoadDialogTitle />\n      <DialogContent>\n        {modalObject.content ? modalObject.content : ''}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color='primary' buttonText='Close' />\n      </DialogActions>\n    </Dialog>\n  );\n}\n"],"names":["Button","React","lazy","defaultExport","undefined","ModalContext","Dialog","DialogActions","DialogContent","DialogTitle","Modal","modalOpen","setModalOpen","modalObject","useContext","handleClose","LoadDialogTitle","title","id","content"],"sourceRoot":""}