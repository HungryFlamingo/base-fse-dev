{"version":3,"file":"chunk/common-react-hungry-flamingo_UI_Button_Button_js.07cc8ff1800275aacfce.min.js","mappings":"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","sources":["webpack://base-fse/./common-react-hungry-flamingo/UI/Button/Button.js"],"sourcesContent":["import React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nimport CheckIcon from '@mui/icons-material/Check';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SaveIcon from '@mui/icons-material/Save';\nimport UpdateIcon from '@mui/icons-material/Update';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\n\n/**\n * Button with a loading state and icon\n *\n * @param {string} variant - MUI variant for the style of the button\n * @param {string} type - type of the button\n * @param {string} color - value to control the color of the button\n * @param {boolean} disabled - state of the button\n * @param {string} size - size of the button\n * @param {string} buttonText - text shown in the button\n * @param {boolean} loading - state to set the button as loading or not\n * @param {string} startIcon - icon for the start of the button text\n * @param {string} endIcon - icon for the end of the button text\n * @param {boolean} success - state to control if the action was successful or not\n * @param {callback} onClick - callback function to trigger when the button is clicked\n *\n * @prop {boolean} showLoading - state for making the loading animation visible\n * @prop {boolean} showSuccess - state for making the success icon visible\n *\n */\nfunction HFButton({\n  variant = 'contained',\n  type = 'submit',\n  color = 'primary',\n  disabled = false,\n  size = 'medium',\n  buttonText = '',\n  loading = false,\n  startIcon = undefined,\n  endIcon = undefined,\n  success = false,\n  onClick = undefined,\n  centered = false\n}) {\n  const theme = useTheme();\n\n  const [showLoading, setShowLoading] = React.useState(false);\n  const [showSuccess, setShowSuccess] = React.useState(false);\n\n  React.useEffect(() => {\n    if (loading === false) {\n      const loadingTimer = setTimeout(function () {\n        setShowLoading(false);\n      }, 1000);\n\n      return () => {\n        clearTimeout(loadingTimer);\n      };\n    } else {\n      setShowLoading(true);\n    }\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (success !== false) {\n      setShowSuccess(true);\n    } else {\n      setShowSuccess(false);\n    }\n    const successTimer = setTimeout(function () {\n      setShowSuccess(false);\n    }, 5000);\n\n    return () => {\n      clearTimeout(successTimer);\n    };\n  }, [success]);\n\n  //Get Started Component\n  const GetStartIcon = () => {\n    let startIconContent = startIcon;\n    if (startIcon === undefined) {\n      startIconContent = <ArrowRightIcon />;\n    } else if (startIcon === 'add') {\n      startIconContent = <AddCircleIcon />;\n    } else if (startIcon === 'save') {\n      startIconContent = <SaveIcon />;\n    } else if (startIcon === 'update') {\n      startIconContent = <UpdateIcon />;\n    } else if (startIcon === 'delete') {\n      startIconContent = <HighlightOffIcon />;\n    } else if (startIcon === 'edit') {\n      startIconContent = <EditIcon />;\n    }\n\n    if (showSuccess) {\n      startIconContent = <CheckIcon />;\n    }\n\n    return startIconContent;\n  };\n\n  return (\n    <Box\n      sx={{\n        margin: centered ? 'auto' : theme.spacing(0),\n        position: 'relative',\n        textAlign: 'center',\n        maxWidth: 'fit-content',\n        display: 'flex',\n        alignItems: 'center'\n      }}\n    >\n      <Button\n        sx={{\n          whiteSpace: 'nowrap'\n        }}\n        variant={variant}\n        type={type}\n        color={color}\n        disabled={disabled}\n        size={size}\n        startIcon={<GetStartIcon />}\n        endIcon={endIcon}\n        onClick={onClick}\n      >\n        {buttonText}\n        {showLoading && (\n          <CircularProgress\n            size={24}\n            thickness={6}\n            sx={{\n              color: theme.palette.lib.white,\n              position: 'absolute'\n            }}\n          />\n        )}\n      </Button>\n    </Box>\n  );\n}\n\nexport default HFButton;\n"],"names":["React","useTheme","Button","CircularProgress","Box","CheckIcon","ArrowRightIcon","SaveIcon","UpdateIcon","EditIcon","AddCircleIcon","HighlightOffIcon","HFButton","variant","type","color","disabled","size","buttonText","loading","startIcon","undefined","endIcon","success","onClick","centered","theme","showLoading","setShowLoading","useState","showSuccess","setShowSuccess","useEffect","loadingTimer","setTimeout","clearTimeout","successTimer","GetStartIcon","startIconContent","margin","spacing","position","textAlign","maxWidth","display","alignItems","whiteSpace","palette","lib","white"],"sourceRoot":""}